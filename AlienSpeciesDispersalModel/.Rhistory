plot(f_natural(c(0:10),1.5),type="l",ylim=c(0,1))
library(AlienSpeciesDispersalModel)
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', echo=TRUE)
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', echo=TRUE)
setwd("C:/Users/mbagnara/Desktop/BiK-F postDoc/Model/29-Aug-2018 09-52-31")
system("C:/ImageMagick-7.0.8-Q16/convert.exe -delay 80 *.png ModelSpread.gif")
setwd(mainDir)
LClegend
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', echo=TRUE)
plot(f_natural(c(0:10),.6),type="l",ylim=c(0,1))
plot(f_natural(c(0:10),0.4),type="l",ylim=c(0,1))
plot(f_natural(c(0:10),a=0.1),type="l",ylim=c(0,1))
plot(f_natural(seq(0,10,by = .1),a=0.1),type="l",ylim=c(0,1))
seq(0,10,by = .1)
plot(f_natural(c(seq(0,10,by = .1)),a=0.1),type="l",ylim=c(0,1))
plot(f_natural(c(seq(0,10,by = .1)),a=0.1),type="l",ylim=c(0,1),log='x')
plot(f_natural(c(seq(0,10,by = .1)),a=0.1),type="l",ylim=c(0,1),log='y')
plot(f_natural(c(seq(0.1,10,by = .1)),a=0.1),type="l",ylim=c(0,1),log='y')
plot(f_natural(c(seq(0.1,10,by = .1)),a=0.1),type="l",ylim=c(0.1,1),log='y')
plot(f_natural(c(seq(0.1,10,by = .1)),a=0.1),type="l",log='y')
f_natural(c(seq(0.1,10,by = .1))
)
f_natural(c(seq(0.1,10,by = .1)),.1)
f_natural(c(seq(0.1,10,by = .1)),.5)
f_natural(c(seq(0.1,10,by = .1)),1)
f_natural(c(seq(0.1,10,by = .1)),10)
?gamma
LClegend$LC_ID
library(AlienSpeciesDispersalModel)
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/AlienSpeciesDispersalModel/R/SpreadModel.R', echo=TRUE)
source('~/GitHub/AlienSpeciesSpread/AlienSpeciesDispersalModel/R/SpreadModel.R', echo=TRUE)
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
shapeObj<-roads_shp
if (file.exists(file.path(dir_data,Rdata_file))) load(file.path(dir_data,Rdata_file))
shapeObj<-roads_shp
## extract coordinates from shapefile
res <- lapply(slot(shapeObj, "lines"), function(x) lapply(slot(x, "Lines"),function(y) slot(y, "coords")))
names(res)<-shapeObj@data$ID
segsID<-sapply(lapply(res,"[[",1),nrow)
coords<-as.data.frame(do.call("rbind",lapply(res,"[[",1)),stringsAsFactors=F)
colnames(coords)<- c("lon","lat")
coords$ID<-rep(names(segsID),segsID)
## create a 'search tree' from coordinates
tree <- SearchTrees::createTree(coords[,1:2]) # required to calculate the nearest neighbour for each set of coordinates
## get ID of nearest segment, the ID is the same as in road_shp (at least, it should be)
ids<-c()
for (i in 1:nrow(init_coords)){
neighbor <- SearchTrees::knnLookup(tree,newdat=init_coords[i,],k=1000) # lookup nearest neighbour, 'k' determines the number of nearest neighbors
D<-coords[neighbor,]
D<-as.data.frame(D)
D$dist<-geosphere::distm(D[,1:2], init_coords[i,],fun=distVincentyEllipsoid)
ids<-c(ids,as.character(unique(D$ID[D$dist<max_dist])))
}
max_dist=1000
i<-1
neighbor <- SearchTrees::knnLookup(tree,newdat=init_coords[i,],k=1000) # lookup nearest neighbour, 'k' determines the number of nearest neighbors
D<-coords[neighbor,]
D<-as.data.frame(D)
init_coords
D
D$dist<-geosphere::distm(D[,1:2], init_coords[i,],fun=distVincentyEllipsoid)
ids<-c(ids,as.character(unique(D$ID[D$dist<max_dist])))
ids
i<-2
neighbor <- SearchTrees::knnLookup(tree,newdat=init_coords[i,],k=1000) # lookup nearest neighbour, 'k' determines the number of nearest neighbors
D<-coords[neighbor,]
D<-as.data.frame(D)
D$dist<-geosphere::distm(D[,1:2], init_coords[i,],fun=distVincentyEllipsoid)
ids<-c(ids,as.character(unique(D$ID[D$dist<max_dist])))
ids
unique(ids)
D
norm<-seq(0,1,length.out=100001)
color <- rev(colorRampPalette(c("red","orange","yellow"))(100001))
pal<-as.data.frame(cbind(norm,color))
pal$color<-as.character(pal$color)
pal$color[pal$norm==0]<-"lightgray"
plot(border_shp,axes=F,
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]),lwd=0.1)
x11(width = 7,height = 11)
x11(width = 7,height = 9)
plot(border_shp,axes=F,
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]),lwd=0.1)
plot(ShapeObj,add=T)
shapeObj<-roads_shp
plot(ShapeObj,add=T)
ShapeObj<-roads_shp
plot(ShapeObj,add=T)
coo<-list(init_coords[1,])
coo
points(coo,pch=16,col=red)
points(coo[[1]],pch=16,col=red)
points(coo[[1]],pch=16,col="red")
coo<-list(init_coords[2,])
points(coo[[1]],pch=16,col="red")
points(init_coords[2,],pch=16,col="green")
D<-coords[neighbor,]
D
for (i in 1:nrows(D)) points(D[i,1:2],pch=16,col="green")
for (i in 1:nrow(D)) points(D[i,1:2],pch=16,col="green")
iter_save <- round(c(1,10,50,seq(100,num_iter,length.out = 3)),0)
iter_save
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/AlienSpeciesDispersalModel/R/SpreadModel.R', echo=TRUE)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
dev.off()
if (file.exists(file.path(dir_data,Rdata_file))) load(file.path(dir_data,Rdata_file))
ls()
devtools::use_data(border_shp)
library(devtools)
use_data(border_shp)
rm(list=ls())
graphics.off()
library(rgdal) # only used for plotting
library(sf)
library(data.table)
mainDir<-"C:/Users/mbagnara/Desktop/BiK-F postDoc/Model"
setwd(mainDir)
#setwd("/home/hanno/Bioinvasion/EBAspread/Data/RoadData")
#### Model parameters #################################
## pick-up probability. For Attachment AND airflow dispersal
par_pickup <- 0.000001 #
## attachment kernel parameters
par_att1 <- 0.6556
par_att2 <- -0.05
par_att3 <- 0.3311
#f_attach <- function(D) exp(b*exp(c*(D^g)))
## traffic kernel parameters
# traf1 <- 1e-06
#f_traff <- function(T) 1-exp(-a*T)
## airflow kernel parameters
par_air1<-0.211
par_air2<-0.791
## natural dispersal kernel parameter
par_nat1<- 1.06 # González-Martínez et al . 2006, P. pinaster
par_nat2<- 0.5 #González-Martínez et al . 2006, P. pinaster.   b>1: thin-tailed ; b<1: fat-tailed. Values for b generally found from 0.3 to 0.6 (Nathan et al. 2012)
## establishment scale parameter
par_est<- 1 #arbitrary. Should be <=1
# build parameter matrix
parameters<-matrix(c(par_pickup,par_att1,par_att2,par_att3,par_air1,par_air2,par_nat1,par_nat2,par_est),nrow=1,byrow=T)
colnames(parameters)<-c("pickup_prob", "att1","att2","att3", "air1","air2","nat1","nat2","scale_est")
#Set landcover IDs suitable for establishment
Suitable_LandCoverID<-LClegend$LC_ID #select all and it should not make a difference
#### Initialization info #################################
dir_data<-"C:/Users/mbagnara/Dropbox/AlienSpeciesSpread/Data/TestDataRoad/20180314_Verkehrsbelastungen2015_DTV"
netw_data<-"20180704_BelastungLkwPkw" #network layer
Rdata_file<- "road_shp.Rdata"
init_coords <- data.frame(Long=c(9.9938531,13.2862487),Lat=c(53.5396466,52.5588327)) # Hamburg Hafen & Berlin airport
num_iter<- 200 # simulation steps
iter_save <- round(c(1,10,50,seq(100,num_iter,length.out = 3)),0)
library(AlienSpeciesDispersalModel)
rm(list=ls())
graphics.off()
library(rgdal) # only used for plotting
library(sf)
library(data.table)
mainDir<-"C:/Users/mbagnara/Desktop/BiK-F postDoc/Model"
setwd(mainDir)
#setwd("/home/hanno/Bioinvasion/EBAspread/Data/RoadData")
#### Model parameters #################################
## pick-up probability. For Attachment AND airflow dispersal
par_pickup <- 0.000001 #
## attachment kernel parameters
par_att1 <- 0.6556
par_att2 <- -0.05
par_att3 <- 0.3311
#f_attach <- function(D) exp(b*exp(c*(D^g)))
## traffic kernel parameters
# traf1 <- 1e-06
#f_traff <- function(T) 1-exp(-a*T)
## airflow kernel parameters
par_air1<-0.211
par_air2<-0.791
## natural dispersal kernel parameter
par_nat1<- 1.06 # González-Martínez et al . 2006, P. pinaster
par_nat2<- 0.5 #González-Martínez et al . 2006, P. pinaster.   b>1: thin-tailed ; b<1: fat-tailed. Values for b generally found from 0.3 to 0.6 (Nathan et al. 2012)
## establishment scale parameter
par_est<- 1 #arbitrary. Should be <=1
# build parameter matrix
parameters<-matrix(c(par_pickup,par_att1,par_att2,par_att3,par_air1,par_air2,par_nat1,par_nat2,par_est),nrow=1,byrow=T)
colnames(parameters)<-c("pickup_prob", "att1","att2","att3", "air1","air2","nat1","nat2","scale_est")
#Set landcover IDs suitable for establishment
Suitable_LandCoverID<-LClegend$LC_ID #select all and it should not make a difference
#### Initialization info #################################
dir_data<-"C:/Users/mbagnara/Dropbox/AlienSpeciesSpread/Data/TestDataRoad/20180314_Verkehrsbelastungen2015_DTV"
netw_data<-"20180704_BelastungLkwPkw" #network layer
Rdata_file<- "road_shp.Rdata"
init_coords <- data.frame(Long=c(9.9938531,13.2862487),Lat=c(53.5396466,52.5588327)) # Hamburg Hafen & Berlin airport
num_iter<- 200 # simulation steps
iter_save <- round(c(1,10,50,seq(100,num_iter,length.out = 3)),0)
if (file.exists(file.path(dir_data,Rdata_file))) load(file.path(dir_data,Rdata_file))
devtools::use_data(border_shp)
devtools::use_data("border_shp")
install.packages(devtools)
install.packages("devtools")
install.packages("devtools")
if (file.exists(file.path(dir_data,Rdata_file))) load(file.path(dir_data,Rdata_file))
library(devtools)
use_data(border_shp)
use_data(roads_shp)
x<-1:10
use_data(x)
library(AlienSpeciesDispersalModel)
# Model to simulate the spread of propagules attached to motor vehicles
#
# requires the road network: 20180314_Verkehrsbelastungen2015_DTV (shapefile)
#############################################################################
rm(list=ls())
graphics.off()
library(rgdal) # only used for plotting
library(sf)
library(data.table)
mainDir<-"C:/Users/mbagnara/Desktop/BiK-F postDoc/Model"
setwd(mainDir)
#setwd("/home/hanno/Bioinvasion/EBAspread/Data/RoadData")
#### Model parameters #################################
## pick-up probability. For Attachment AND airflow dispersal
par_pickup <- 0.000001 #
## attachment kernel parameters
par_att1 <- 0.6556
par_att2 <- -0.05
par_att3 <- 0.3311
#f_attach <- function(D) exp(b*exp(c*(D^g)))
## traffic kernel parameters
# traf1 <- 1e-06
#f_traff <- function(T) 1-exp(-a*T)
## airflow kernel parameters
par_air1<-0.211
par_air2<-0.791
## natural dispersal kernel parameter
par_nat1<- 1.06 # González-Martínez et al . 2006, P. pinaster
par_nat2<- 0.5 #González-Martínez et al . 2006, P. pinaster.   b>1: thin-tailed ; b<1: fat-tailed. Values for b generally found from 0.3 to 0.6 (Nathan et al. 2012)
## establishment scale parameter
par_est<- 1 #arbitrary. Should be <=1
# build parameter matrix
parameters<-matrix(c(par_pickup,par_att1,par_att2,par_att3,par_air1,par_air2,par_nat1,par_nat2,par_est),nrow=1,byrow=T)
colnames(parameters)<-c("pickup_prob", "att1","att2","att3", "air1","air2","nat1","nat2","scale_est")
#Set landcover IDs suitable for establishment
Suitable_LandCoverID<-LClegend$LC_ID #select all and it should not make a difference
#### Initialization info #################################
dir_data<-"C:/Users/mbagnara/Dropbox/AlienSpeciesSpread/Data/TestDataRoad/20180314_Verkehrsbelastungen2015_DTV"
netw_data<-"20180704_BelastungLkwPkw" #network layer
Rdata_file<- "road_shp.Rdata"
init_coords <- data.frame(Long=c(9.9938531,13.2862487),Lat=c(53.5396466,52.5588327)) # Hamburg Hafen & Berlin airport
num_iter<- 10 # simulation steps
iter_save <- 1 #round(c(1,10,50,seq(100,num_iter,length.out = 3)),0)
max_dist=1000
roads_shp<-roads_dataset
roads_shp@data$ID<-paste(roads_shp@data$Von_Knoten,roads_shp@data$Nach_Knote,sep="_")
roads_shp@data[, c(4,6,7)]<-sapply(roads_shp@data[, c(4,6,7)], as.numeric)
road_netw <- as.data.table(roads_shp@data)
road_netw[,Traffic:=DTVLkw+ DTVPkw]
road_netw <- road_netw[,.(Von_Knoten,Nach_Knote,Laenge,Typ, Traffic,ID)]
names(road_netw) <- c("FromNode","ToNode","Length","Type","Traffic","ID")
road_netw[,p_natural:=f_natural(Length,parameters[nparset,"nat1"],parameters[nparset,"nat2"] )]
nparset<-1
road_netw[,p_natural:=f_natural(Length,parameters[nparset,"nat1"],parameters[nparset,"nat2"] )]
road_netw[,p_attach:=f_attach(Length,parameters[nparset,"att1"],parameters[nparset,"att2"],parameters[nparset,"att3"])]
road_netw[,p_attach:= 1-(1-p_attach)^(Traffic*parameters[nparset,"pickup_prob"])]
road_netw[,p_airflow:=f_airflow(Length,parameters[nparset,"air1"],parameters[nparset,"air2"])]
road_netw[,p_airflow:= 1-(1-p_airflow)^(Traffic*parameters[nparset,"pickup_prob"])]
col_prob<-road_netw[,.SD,.SDcols=grep("p_",colnames(road_netw))]
road_netw[,Pi:=apply(col_prob,1,pUnion)] #prod by row
LCprop<-LCproportion(List=LClist,LandCoverID=Suitable_LandCoverID) #requires LClist, provided as internal data in data/LClist.rda
setkey(road_netw,ID)
head(road_netw)
from<-road_netw$FromNode
road_netw<-road_netw[LCprop, on="ID"]
head(road_netw)
from2<-road_netw$FromNode
str(from)
summary(as.numeric(from)-(as.numeric(from2)))
plot(as.numeric(from),(as.numeric(from2)))
length(from)
length(from2)
if (file.exists(file.path(dir_data,Rdata_file)))
load(file.path(dir_data,Rdata_file))
roads_shp@data$ID<-paste(roads_shp@data$Von_Knoten,roads_shp@data$Nach_Knote,sep="_")
roads_shp@data[, c(4,6,7)]<-sapply(roads_shp@data[, c(4,6,7)], as.numeric)
road_netw <- as.data.table(roads_shp@data)
road_netw[,Traffic:=DTVLkw+ DTVPkw]
road_netw <- road_netw[,.(Von_Knoten,Nach_Knote,Laenge,Typ, Traffic,ID)]
names(road_netw) <- c("FromNode","ToNode","Length","Type","Traffic","ID")
road_netw[,p_natural:=f_natural(Length,parameters[nparset,"nat1"],parameters[nparset,"nat2"] )]
road_netw[,p_attach:=f_attach(Length,parameters[nparset,"att1"],parameters[nparset,"att2"],parameters[nparset,"att3"])]
road_netw[,p_attach:= 1-(1-p_attach)^(Traffic*parameters[nparset,"pickup_prob"])]
road_netw[,p_airflow:=f_airflow(Length,parameters[nparset,"air1"],parameters[nparset,"air2"])]
road_netw[,p_airflow:= 1-(1-p_airflow)^(Traffic*parameters[nparset,"pickup_prob"])]
col_prob<-road_netw[,.SD,.SDcols=grep("p_",colnames(road_netw))]
road_netw[,Pi:=apply(col_prob,1,pUnion)] #prod by row
setkey(road_netw,ID)
fromFile<-road_netw$FromNode
length(fromFile)
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
summary(modelResults[[1]]$Pe)
summary(modelResults[[1]]$Pinv)
plot(1:10,1:10,col=c("red","NA"))
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
nrow(modelResults[[1]])
init_segm
init<-roads_dataset[roads_dataset@data$ID %in% init_segm]
init<-roads_dataset[roads_dataset@data$ID %in% init_segm,]
str(init)
lines(init,lwd=4,col="blue")
x11(width=7,height = 8)
op <- par(mar=rep(0,4))
plot(border_dataset,axes=F,
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]),lwd=0.1)
lines(init,lwd=4,col="blue")
modelResults[[1]][ID%in%init_segm,]
modelResults[[1]][modelResults[[1]]ID%in%init_segm,]
modelResults[[1]][modelResults[[1]]$ID%in%init_segm,]
?merge.data.table
library(AlienSpeciesDispersalModel)
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
dev.off()
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
modelResults[[1]]$ID
modelResults[[1]]$ID==roads_dataset@data$ID
summary(modelResults[[1]]$ID==roads_dataset@data$ID)
roads_shp<-roads_dataset
shapeObj<-roads_dataset
shapeObj@data <-setDF(list_results[[i]],rownames = 1:nrow(list_results[[i]]))
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,4))
shapeObj@data<-merge(shapeObj@data,pal,by="norm",sort=FALSE)
shapeObj@data <-setDF(modelResults[[1]],rownames = 1:nrow(modelResults[[1]]))
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,4))
norm<-seq(0,1,length.out=100001)
color <- rev(colorRampPalette(c("red","orange","yellow"))(100001))
pal<-as.data.frame(cbind(norm,color))
pal$color<-as.character(pal$color)
pal$color[pal$norm==0]<-"lightgray"
summary(shapeObj@data$ID==roads_dataset@data$ID)
shapeObj@data<-merge(shapeObj@data,pal,by="norm",sort=FALSE)
summary(shapeObj@data$ID==roads_dataset@data$ID)
shapeObj@data <-setDF(modelResults[[1]],rownames = 1:nrow(modelResults[[1]]))
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,4))
str(shapeObj@data)
str(pal)
table(pal$norm)
table(shapeObj@data$norm)
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,5))
table(shapeObj@data$norm)
shapeObj@data<-merge(shapeObj@data,pal,by="norm",sort=FALSE)
summary(shapeObj@data$ID==roads_dataset@data$ID)
nrow(shapeObj@data)
pal<-pal[pal$norm%in%shapeObj@data$norm,]
table(pal$norm)
pal$norm<-factor(pal$norm)
table(pal$norm)
shapeObj@data<-merge(shapeObj@data,pal,by="norm",sort=FALSE)
summary(shapeObj@data$ID==roads_dataset@data$ID)
shapeObj@data <-setDF(list_results[[i]],rownames = 1:nrow(list_results[[i]]))
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,5))
pal<-pal[pal$norm%in%shapeObj@data$norm,]
pal$norm<-factor(pal$norm)
shapeObj@data <-setDF(modelResults[[1]],rownames = 1:nrow(modelResults[[1]]))
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,5))
pal<-pal[pal$norm%in%shapeObj@data$norm,]
pal$norm<-factor(pal$norm)
summary(shapeObj@data$ID==roads_dataset@data$ID)
pal2<-pal[pal$norm%in%shapeObj@data$norm,]
pal2$norm<-factor(pal2$norm)
shapeObj@data<-merge(shapeObj@data,pal2,by="norm",all=TRUE,sort=FALSE)
summary(shapeObj@data$ID==roads_dataset@data$ID)
head(roads_dataset@data$ID)
head(shapeObj@data$ID)
head(shapeObj@data$)
head(shapeObj@data)
plot(shapeObj@data$norm)
plot(shapeObj@data$norm,type="l")
plot(as.numeric(shapeObj@data$norm,type="l"))
plot(as.numeric(as.character(shapeObj@data$norm)))
head(shapeObj@data$norm,1000)
head(shapeObj@data$Pinv,1000)
shapeObj@data <-setDF(modelResults[[1]],rownames = 1:nrow(modelResults[[1]]))
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,5))
head(shapeObj@data$norm,1000)
pal2<-pal[pal$norm%in%shapeObj@data$norm,]
pal2$norm<-factor(pal2$norm)
pal2$norm
?merge
shapeObj@data<-merge(shapeObj@data,pal2,by="norm",all=TRUE,sort=FALSE)
head(shapeObj@data$norm,1000)
head(shapeObj@data)
head(roads_dataset@data)
?sort
shapeObj<-roads_dataset
shapeObj@data <-setDF(modelResults[[1]],rownames = 1:nrow(modelResults[[1]]))
shapeObj@data <-setDF(list_results[[i]],rownames = 1:nrow(list_results[[i]]))
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,5))
shapeObj@data$ID==roads_dataset@data$ID
summary(shapeObj@data$ID==roads_dataset@data$ID)
# pal2<-pal[pal$norm%in%shapeObj@data$norm,]
# pal2$norm<-factor(pal2$norm)
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
summary(shapeObj@data$ID==roads_dataset@data$ID)
shapeObj@data <-setDF(modelResults[[1]],rownames = 1:nrow(modelResults[[1]]))
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,5))
# pal2<-pal[pal$norm%in%shapeObj@data$norm,]
# pal2$norm<-factor(pal2$norm)
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE)
shapeObj@data$ID==roads_dataset@data$ID
shapeObj@data <-setDF(modelResults[[1]],rownames = 1:nrow(modelResults[[1]]))
head(shapeObj@data)
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,5))
head(shapeObj@data)
# pal2<-pal[pal$norm%in%shapeObj@data$norm,]
# pal2$norm<-factor(pal2$norm)
shapeObj@data<-merge(shapeObj@data,pal,by="norm",sort=FALSE)
head(shapeObj@data)
shapeObj@data <-setDF(modelResults[[1]],rownames = 1:nrow(modelResults[[1]]))
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,5))
#create palette
norm<-as.character(seq(0,1,length.out=100001))
color <- rev(colorRampPalette(c("red","orange","yellow"))(100001))
pal<-as.data.frame(cbind(norm,color))
pal$color<-as.character(pal$color)
pal$color[pal$norm==0]<-"lightgray"
shapeObj@data <-setDF(modelResults[[1]],rownames = 1:nrow(modelResults[[1]]))
shapeObj@data$norm <- as.character(round(shapeObj@data$Pinv,5))
head(shapeObj@data)
# pal2<-pal[pal$norm%in%shapeObj@data$norm,]
# pal2$norm<-factor(pal2$norm)
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
head(shapeObj@data)
norm<-factor(seq(0,1,length.out=100001))
color <- rev(colorRampPalette(c("red","orange","yellow"))(100001))
pal<-as.data.frame(cbind(norm,color))
pal$color<-as.character(pal$color)
pal$color[pal$norm==0]<-"lightgray"
shapeObj@data <-setDF(modelResults[[1]],rownames = 1:nrow(modelResults[[1]]))
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pinv,5))
# pal2<-pal[pal$norm%in%shapeObj@data$norm,]
# pal2$norm<-factor(pal2$norm)
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
head(shapeObj@data)
head(pal)
norm<-seq(0,1,length.out=100001)
color <- rev(colorRampPalette(c("red","orange","yellow"))(100001))
pal<-as.data.frame(cbind(norm,color))
pal$color<-as.character(pal$color)
pal$color[pal$norm==0]<-"lightgray"
srt(norm)
str(pal)
?order
setorder(shapeObj@data,ID)
summary(shapeObj@data$ID==roads_dataset@data$ID)
source('~/GitHub/AlienSpeciesSpread/AlienSpeciesDispersalModel/R/plotResults.R', echo=TRUE)
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
library(AlienSpeciesDispersalModel)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
x<-LCproportion(LClist,Suitable_LandCoverID)
x
source('~/GitHub/AlienSpeciesSpread/AlienSpeciesDispersalModel/R/LCproportion.R', echo=TRUE)
x<-LCproportion(LClist,Suitable_LandCoverID)
?data.table
source('~/GitHub/AlienSpeciesSpread/AlienSpeciesDispersalModel/R/LCproportion.R', echo=TRUE)
x<-LCproportion(LClist,Suitable_LandCoverID)
x
source('~/GitHub/AlienSpeciesSpread/AlienSpeciesDispersalModel/R/LCproportion.R', echo=TRUE)
x<-LCproportion(LClist,Suitable_LandCoverID)
x
x
library(AlienSpeciesDispersalModel)
LClegend
LClegend
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R', encoding = 'UTF-8', echo=TRUE)
norm<-seq(0,1,length.out=100001)
color <- rev(colorRampPalette(c("red","orange","yellow","green"))(100001))
pal<-as.data.frame(cbind(norm,color))
pal$color<-as.character(pal$color)
pal$color[pal$norm==0]<-"lightgray"
norm<-seq(0,1,length.out=100001)
color <- rev(colorRampPalette(c("red","orange","yellow","green"))(100001))
pal<-as.data.frame(cbind(norm,color))
pal$color<-as.character(pal$color)
pal$color[pal$norm==0]<-"red"
norm<-seq(0,1,length.out=100001)
color <- colorRampPalette(c("red","orange","yellow","green"))(100001)
pal<-as.data.frame(cbind(norm,color))
pal$color<-as.character(pal$color)
pal$color[pal$norm==0]<-"red"
shapeObj<-roads_dataset
shapeObj@data <-list_results[[i]]
shapeObj<-roads_dataset
shapeObj@data <-modelResults[[1]]
shapeObj@data$norm <- as.factor(round(shapeObj@data$Pe,5))
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
x11(width=7,height = 8)
op <- par(mar=rep(0,4))
plot(border_dataset,axes=F,
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]),lwd=0.1)
plot(shapeObj,add=T,col=shapeObj@data$color)
# for (j in init_nodes) points(subset(node_shp_sub,Knoten_Num%in%j),pch=1,cex=1,col="blue",lwd=2)
# mtext(t,side=3,line=-2)
legend("topleft",c(paste0("Iter. #",names(list_results)[i])),box.col = "white",bg = "white")
plot(border_dataset,axes=F,add=T,lwd=0.1)
