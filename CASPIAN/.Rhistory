netw_speed[netw_speed$FromNode%in%ems$nodeID | netw_speed$ToNode%in%ems$nodeID,]$velocity <- 0
netw_speed[netw_speed$ID%in%elbe,]$velocity <- -1
netw_speed[netw_speed$ID%in%oder,]$velocity <- -1
netw_speed$velocity2 <- netw_speed$velocity
i<-16
newstart <- "XX"
oldstart <- "XX"
ind <- 0
x <- 0
while(!any(newstart%in%northends$nodeID | newstart%in%southends$nodeID)){
if (x==0) newstart <- southends$nodeID[i]
x <- x + 1
ind <- which(netw_speed$FromNode%in%newstart & !netw_speed$ToNode%in%oldstart & netw_speed$velocity!=0)
if (length(ind)==0) break #length(ind)>1 |
if (any((netw_speed[ind,]$velocity==-1))){
ind_highlat <- which.max(from_node[from_node$nodeID%in%netw_speed[ind,]$ToNode,]$Lat)
# ind_highlat <- which.min(from_node[from_node$nodeID%in%netw_speed[ind,]$ToNode,]$Long)
nextnode <- from_node[from_node$nodeID%in%netw_speed[ind,]$ToNode,][ind_highlat,]$nodeID
if (nextnode=="301413000") nextnode <- "301400001" # wrong direction below Hamburg
ind <- which(netw_speed$FromNode%in%newstart & !netw_speed$ToNode%in%oldstart & netw_speed$velocity==-1 & netw_speed$To==nextnode)
if (length(ind)==0) break
netw_speed[ind,]$velocity <- 1
# if (i==14) netw_speed[ind,]$velocity2 <- 5-(x/5) # Oder
# if (i==15) netw_speed[ind,]$velocity2 <- 6-(x/5) # Elbe
if (i==16) netw_speed[ind,]$velocity2 <- 7-(x/5) # Rhein
# if (i==12) netw_speed[ind,]$river <- "Rhine"
} # else {break}
oldstart <- newstart
newstart <- netw_speed[ind,]$ToNode
# print(newstart)
}
netw_speed <- netw_speed[order(netw_speed$order),]
x11()
op <- par(mfrow=c(2,2),mar=c(0,0,2,0))
plot(Ship_Travel_Netw,col=1)
plot(Ship_Travel_Netw[netw_speed$velocity==0 & !is.na(netw_speed$velocity),],col=1,add=T,lwd=5)
mtext(side=3,text="No current")
plot(Ship_Travel_Netw,col=1)
plot(Ship_Travel_Netw[netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity),],col=3,add=T,lwd=5)
mtext(side=3,text="downstream")
dat <- subset(netw_speed,netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity))
# for (i in 1:length(which(netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity)))){
#   node1 <- dat$FromNode[i]
#   node2 <- dat$ToNode[i]
#   arrows(from_node$Long[from_node$nodeID==node1],from_node$Lat[from_node$nodeID==node1],from_node$Long[from_node$nodeID==node2],from_node$Lat[from_node$nodeID==node2],length=0.2)
#   # Sys.sleep(0.1)
# }
plot(Ship_Travel_Netw,col=1)
cols <- rainbow(100,start=4/6,end=0)
col_ind <- round((netw_speed$velocity2/max(netw_speed$velocity2)*99)+1)
col_ind[col_ind<0] <- 0
netw_speed$col_ind <- col_ind
plot(Ship_Travel_Netw[netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity),],col=cols[col_ind],add=T,lwd=5)
mtext(side=3,text="downstream")
dat <- subset(netw_speed,netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity))
# plot(Ship_Travel_Netw,col=1)
# plot(Ship_Travel_Netw[netw_speed$velocity==-1 & !is.na(netw_speed$velocity),],col=5,add=T,lwd=2)
# mtext(side=3,text="upstream")
# dat <- subset(netw_speed,netw_speed$velocity==-1 & !is.na(netw_speed$velocity))
# for (i in 1:length(which(netw_speed$velocity==-1 & !is.na(netw_speed$velocity)))){
#   node1 <- dat$FromNode[i]
#   node2 <- dat$ToNode[i]
#   arrows(from_node$Long[from_node$nodeID==node1],from_node$Lat[from_node$nodeID==node1],from_node$Long[from_node$nodeID==node2],from_node$Lat[from_node$nodeID==node2],length=0.2)
#   # Sys.sleep(.1)
# }
plot(Ship_Travel_Netw,col=1)
plot(Ship_Travel_Netw[netw_speed$velocity==2 & !is.na(netw_speed$velocity),],col=2,add=T,lwd=5)
mtext(side=3,text="Strong currents")
# plot(Ship_Travel_Netw,col=1)
# plot(Ship_Travel_Netw[is.na(netw_speed$velocity),],col=2,add=T,lwd=2)
# mtext(side=3,text="NAs")
par(op)
netw_speed$velocity2
table(netw_speed$velocity2)
table(netw_speed$col_ind)
netw_speed
range(col_ind)
length(cols)
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
cols[col_ind]
col_ind
netw_speed$velocity2
table(netw_speed$velocity2)
graphics.off()
rm(list=ls())
library(sp)
setwd("/home/hanno/Bioinvasion/EBAspread/Data/Waterways")
load("/home/hanno/GitHub/AlienSpeciesSpread/CASPIAN/data/Ship_Travel_Netw.rda") # named Ship_Travel_Netw
ww_data <- Ship_Travel_Netw@data
ww_data$order <- 1:dim(ww_data)[1]
tab_nodes <- table(ww_data$FromNode)
endpoints <- names(tab_nodes)[which(tab_nodes==1)]
res <- lapply(slot(Ship_Travel_Netw, "lines"), function(x) lapply(slot(x, "Lines"),function(y) slot(y, "coords")))
from_node <- as.data.frame(do.call("rbind",lapply(lapply(res,"[[",1),function(s) s[1,])),stringsAsFactors=F)
# from_node   <- as.data.frame(do.call("rbind",lapply(lapply(res,"[[",1),function(s) s[dim(s)[1],])),stringsAsFactors=F)
colnames(from_node) <- c("Long","Lat")
from_node$nodeID <- Ship_Travel_Netw@data$FromNode
from_node <- unique(from_node)
## add ship speed
speed <- read.table("Bischi_VTal_VBerg.csv",stringsAsFactors = F,header=T,sep=";")
speed$diff <- speed$V_TAL-speed$V_BERG
speed <- speed[,c(1,2,5)]
colnames(speed) <- c("FromNode","ToNode","Diff")
netw_speed <- merge(ww_data,speed,by=c("FromNode","ToNode"),all.x=T,sort=F)
colnames(speed) <- c("ToNode","FromNode","Diff2")
speed <- speed[speed$Diff==0,]
netw_speed <- merge(netw_speed,speed,by=c("FromNode","ToNode"),all.x=T,sort=F)
netw_speed <- netw_speed[order(netw_speed$order),]
x11()
plot(Ship_Travel_Netw)#,col=1,xlim=c(14,15),ylim=c(52,54)
plot(Ship_Travel_Netw[ww_data$FromNode%in%endpoints,],add=T,col=2)
points(from_node[from_node$nodeID%in%endpoints,c("Long","Lat")])
plot(Ship_Travel_Netw[netw_speed$Diff==0,],col=4,add=T)
plot(Ship_Travel_Netw[Ship_Travel_Netw@data$ID=="W426",],col=4,add=T,lwd=5)#W189,W265,193
# plot(Ship_Travel_Netw[netw_speed$Diff==1,],col=3,add=T)
plot(Ship_Travel_Netw[netw_speed$Diff==2,],col=2,add=T)
points(from_node[from_node$nodeID%in%346109000,c("Long","Lat")],pch=16,col=3,cex=2)
# plot(Ship_Travel_Netw[Ship_Travel_Netw@data$FromNode%in%c(346109000,346101000),],col=1:6,add=F,lwd=5)
### determine slope
tab_nodes <- table(ww_data$FromNode)
endpoints <- names(tab_nodes)[which(tab_nodes==1)]
crossings <- names(tab_nodes)[which(tab_nodes==3)]
southends <- subset(from_node,(Lat<51.7 & nodeID%in%endpoints) | from_node$nodeID%in%c(318301000,319108000,303200003,301413000))
southends <- subset(southends,nodeID!=319300001)
northends <- subset(from_node,Lat>51.7 & nodeID%in%endpoints)
points(from_node[from_node$nodeID%in%southends$nodeID,c("Long","Lat")],pch=16,col=3)
points(from_node[from_node$nodeID%in%northends$nodeID,c("Long","Lat")],pch=16,col=4)
# abline(h=51.7)
# which(southends$nodeID==346109000)
netw_speed$velocity <- -1
netw_speed[netw_speed$Diff==0 & !is.na(netw_speed$Diff),]$velocity <- 0
netw_speed[netw_speed$Diff2==0 & !is.na(netw_speed$Diff2),]$velocity <- 0
abline(h=52,v=14)
mosel <- subset(from_node,Lat<50.5 & Long<8)
donau <- subset(from_node,Lat<49.5 & Long>11.8)
main <- subset(from_node,Lat>49.8 & Long>10.7 & Lat<50)
ems <- subset(from_node,Lat>52 & Long<8)
oder <- subset(from_node,Long>14 & Lat>52)
elbe <- c("W573")
oder <- c("W181","W179","W219")
rhine <- c(335343000,307209000,335000001)
points(main$Long,main$Lat)
netw_speed[netw_speed$FromNode%in%mosel$nodeID | netw_speed$ToNode%in%mosel$nodeID,]$velocity <- -1
# netw_speed[netw_speed$FromNode%in%donau$nodeID | netw_speed$ToNode%in%donau$nodeID,]$velocity <- -1
# netw_speed[netw_speed$FromNode%in%c(319118000) & netw_speed$ToNode%in%c(319108000),]$velocity <- 0 # bordering links need to be set to zero again
# netw_speed[netw_speed$FromNode%in%c(319108000) & netw_speed$ToNode%in%c(319118000),]$velocity <- 0 # bordering links need to be set to zero again
# netw_speed[netw_speed$FromNode%in%main$nodeID | netw_speed$ToNode%in%main$nodeID,]$velocity <- -1
netw_speed[netw_speed$FromNode%in%ems$nodeID | netw_speed$ToNode%in%ems$nodeID,]$velocity <- 0
netw_speed[netw_speed$ID%in%elbe,]$velocity <- -1
netw_speed[netw_speed$ID%in%oder,]$velocity <- -1
netw_speed$velocity2 <- netw_speed$velocity
# which.min(subset(from_node,nodeID%in%donau$nodeID)$Long) #319108000
# netw_speed[,river:=NA]
for (i in 1:nrow(southends)){#
newstart <- "XX"
oldstart <- "XX"
ind <- 0
x <- 0
while(!any(newstart%in%northends$nodeID | newstart%in%southends$nodeID)){
if (x==0) newstart <- southends$nodeID[i]
x <- x + 1
ind <- which(netw_speed$FromNode%in%newstart & !netw_speed$ToNode%in%oldstart & netw_speed$velocity!=0)
if (length(ind)==0) break #length(ind)>1 |
if (any((netw_speed[ind,]$velocity==-1))){
ind_highlat <- which.max(from_node[from_node$nodeID%in%netw_speed[ind,]$ToNode,]$Lat)
# ind_highlat <- which.min(from_node[from_node$nodeID%in%netw_speed[ind,]$ToNode,]$Long)
nextnode <- from_node[from_node$nodeID%in%netw_speed[ind,]$ToNode,][ind_highlat,]$nodeID
if (nextnode=="301413000") nextnode <- "301400001" # wrong direction below Hamburg
ind <- which(netw_speed$FromNode%in%newstart & !netw_speed$ToNode%in%oldstart & netw_speed$velocity==-1 & netw_speed$To==nextnode)
if (length(ind)==0) break
netw_speed[ind,]$velocity <- 1
# if (i==14) netw_speed[ind,]$velocity2 <- 5-(x/5) # Oder
# if (i==15) netw_speed[ind,]$velocity2 <- 6-(x/5) # Elbe
if (i==16) netw_speed[ind,]$velocity2 <- 7-(x/5) # Rhein
# if (i==12) netw_speed[ind,]$river <- "Rhine"
} # else {break}
oldstart <- newstart
newstart <- netw_speed[ind,]$ToNode
# print(newstart)
}
}
## determine upstream in contrast to downstream
netw_speed$Links <- paste(netw_speed$FromNode,netw_speed$ToNode,sep="_")
downlinks <- netw_speed[netw_speed$velocity==1,c("FromNode","ToNode")]
uplinks <- as.data.frame(paste(downlinks$ToNode,downlinks$FromNode,sep="_"),stringsAsFactors = F)
colnames(uplinks) <- "Links"
uplinks$upVel <- -1
netw_speed <- merge(netw_speed,uplinks,by="Links",all.x=T)
netw_speed[netw_speed$upVel!=netw_speed$velocity & !is.na(netw_speed$upVel),]$velocity <- -1
netw_speed[is.na(netw_speed$upVel) & netw_speed$velocity==-1,]$velocity <- 1
## identify steep slopes
netw_speed[netw_speed$Diff==2 & !is.na(netw_speed$Diff) & netw_speed$velocity==1,]$velocity <- 2
netw_speed <- netw_speed[order(netw_speed$order),]
x11()
op <- par(mfrow=c(2,2),mar=c(0,0,2,0))
plot(Ship_Travel_Netw,col=1)
plot(Ship_Travel_Netw[netw_speed$velocity==0 & !is.na(netw_speed$velocity),],col=1,add=T,lwd=5)
mtext(side=3,text="No current")
plot(Ship_Travel_Netw,col=1)
plot(Ship_Travel_Netw[netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity),],col=3,add=T,lwd=5)
mtext(side=3,text="downstream")
dat <- subset(netw_speed,netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity))
# for (i in 1:length(which(netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity)))){
#   node1 <- dat$FromNode[i]
#   node2 <- dat$ToNode[i]
#   arrows(from_node$Long[from_node$nodeID==node1],from_node$Lat[from_node$nodeID==node1],from_node$Long[from_node$nodeID==node2],from_node$Lat[from_node$nodeID==node2],length=0.2)
#   # Sys.sleep(0.1)
# }
table(netw_speed$velocity2)
graphics.off()
rm(list=ls())
library(sp)
setwd("/home/hanno/Bioinvasion/EBAspread/Data/Waterways")
load("/home/hanno/GitHub/AlienSpeciesSpread/CASPIAN/data/Ship_Travel_Netw.rda") # named Ship_Travel_Netw
ww_data <- Ship_Travel_Netw@data
ww_data$order <- 1:dim(ww_data)[1]
tab_nodes <- table(ww_data$FromNode)
endpoints <- names(tab_nodes)[which(tab_nodes==1)]
res <- lapply(slot(Ship_Travel_Netw, "lines"), function(x) lapply(slot(x, "Lines"),function(y) slot(y, "coords")))
from_node <- as.data.frame(do.call("rbind",lapply(lapply(res,"[[",1),function(s) s[1,])),stringsAsFactors=F)
# from_node   <- as.data.frame(do.call("rbind",lapply(lapply(res,"[[",1),function(s) s[dim(s)[1],])),stringsAsFactors=F)
colnames(from_node) <- c("Long","Lat")
from_node$nodeID <- Ship_Travel_Netw@data$FromNode
from_node <- unique(from_node)
## add ship speed
speed <- read.table("Bischi_VTal_VBerg.csv",stringsAsFactors = F,header=T,sep=";")
speed$diff <- speed$V_TAL-speed$V_BERG
speed <- speed[,c(1,2,5)]
colnames(speed) <- c("FromNode","ToNode","Diff")
netw_speed <- merge(ww_data,speed,by=c("FromNode","ToNode"),all.x=T,sort=F)
colnames(speed) <- c("ToNode","FromNode","Diff2")
speed <- speed[speed$Diff==0,]
netw_speed <- merge(netw_speed,speed,by=c("FromNode","ToNode"),all.x=T,sort=F)
netw_speed <- netw_speed[order(netw_speed$order),]
x11()
plot(Ship_Travel_Netw)#,col=1,xlim=c(14,15),ylim=c(52,54)
plot(Ship_Travel_Netw[ww_data$FromNode%in%endpoints,],add=T,col=2)
points(from_node[from_node$nodeID%in%endpoints,c("Long","Lat")])
plot(Ship_Travel_Netw[netw_speed$Diff==0,],col=4,add=T)
plot(Ship_Travel_Netw[Ship_Travel_Netw@data$ID=="W426",],col=4,add=T,lwd=5)#W189,W265,193
# plot(Ship_Travel_Netw[netw_speed$Diff==1,],col=3,add=T)
plot(Ship_Travel_Netw[netw_speed$Diff==2,],col=2,add=T)
points(from_node[from_node$nodeID%in%346109000,c("Long","Lat")],pch=16,col=3,cex=2)
# plot(Ship_Travel_Netw[Ship_Travel_Netw@data$FromNode%in%c(346109000,346101000),],col=1:6,add=F,lwd=5)
### determine slope
tab_nodes <- table(ww_data$FromNode)
endpoints <- names(tab_nodes)[which(tab_nodes==1)]
crossings <- names(tab_nodes)[which(tab_nodes==3)]
southends <- subset(from_node,(Lat<51.7 & nodeID%in%endpoints) | from_node$nodeID%in%c(318301000,319108000,303200003,301413000))
southends <- subset(southends,nodeID!=319300001)
northends <- subset(from_node,Lat>51.7 & nodeID%in%endpoints)
points(from_node[from_node$nodeID%in%southends$nodeID,c("Long","Lat")],pch=16,col=3)
points(from_node[from_node$nodeID%in%northends$nodeID,c("Long","Lat")],pch=16,col=4)
# abline(h=51.7)
# which(southends$nodeID==346109000)
netw_speed$velocity <- -1
netw_speed[netw_speed$Diff==0 & !is.na(netw_speed$Diff),]$velocity <- 0
netw_speed[netw_speed$Diff2==0 & !is.na(netw_speed$Diff2),]$velocity <- 0
abline(h=52,v=14)
mosel <- subset(from_node,Lat<50.5 & Long<8)
donau <- subset(from_node,Lat<49.5 & Long>11.8)
main <- subset(from_node,Lat>49.8 & Long>10.7 & Lat<50)
ems <- subset(from_node,Lat>52 & Long<8)
oder <- subset(from_node,Long>14 & Lat>52)
elbe <- c("W573")
oder <- c("W181","W179","W219")
rhine <- c(335343000,307209000,335000001)
points(main$Long,main$Lat)
netw_speed[netw_speed$FromNode%in%mosel$nodeID | netw_speed$ToNode%in%mosel$nodeID,]$velocity <- -1
# netw_speed[netw_speed$FromNode%in%donau$nodeID | netw_speed$ToNode%in%donau$nodeID,]$velocity <- -1
# netw_speed[netw_speed$FromNode%in%c(319118000) & netw_speed$ToNode%in%c(319108000),]$velocity <- 0 # bordering links need to be set to zero again
# netw_speed[netw_speed$FromNode%in%c(319108000) & netw_speed$ToNode%in%c(319118000),]$velocity <- 0 # bordering links need to be set to zero again
# netw_speed[netw_speed$FromNode%in%main$nodeID | netw_speed$ToNode%in%main$nodeID,]$velocity <- -1
netw_speed[netw_speed$FromNode%in%ems$nodeID | netw_speed$ToNode%in%ems$nodeID,]$velocity <- 0
netw_speed[netw_speed$ID%in%elbe,]$velocity <- -1
netw_speed[netw_speed$ID%in%oder,]$velocity <- -1
netw_speed$velocity2 <- netw_speed$velocity
i<-16
newstart <- "XX"
oldstart <- "XX"
ind <- 0
x <- 0
while(!any(newstart%in%northends$nodeID | newstart%in%southends$nodeID)){
if (x==0) newstart <- southends$nodeID[i]
x <- x + 1
ind <- which(netw_speed$FromNode%in%newstart & !netw_speed$ToNode%in%oldstart & netw_speed$velocity!=0)
if (length(ind)==0) break #length(ind)>1 |
if (any((netw_speed[ind,]$velocity==-1))){
ind_highlat <- which.max(from_node[from_node$nodeID%in%netw_speed[ind,]$ToNode,]$Lat)
# ind_highlat <- which.min(from_node[from_node$nodeID%in%netw_speed[ind,]$ToNode,]$Long)
nextnode <- from_node[from_node$nodeID%in%netw_speed[ind,]$ToNode,][ind_highlat,]$nodeID
if (nextnode=="301413000") nextnode <- "301400001" # wrong direction below Hamburg
ind <- which(netw_speed$FromNode%in%newstart & !netw_speed$ToNode%in%oldstart & netw_speed$velocity==-1 & netw_speed$To==nextnode)
if (length(ind)==0) break
netw_speed[ind,]$velocity <- 1
# if (i==14) netw_speed[ind,]$velocity2 <- 5-(x/5) # Oder
# if (i==15) netw_speed[ind,]$velocity2 <- 6-(x/5) # Elbe
if (i==16) netw_speed[ind,]$velocity2 <- 7-(x/5) # Rhein
# if (i==12) netw_speed[ind,]$river <- "Rhine"
} # else {break}
oldstart <- newstart
newstart <- netw_speed[ind,]$ToNode
# print(newstart)
}
table(netw_speed$velocity2)
netw_speed$Links <- paste(netw_speed$FromNode,netw_speed$ToNode,sep="_")
downlinks <- netw_speed[netw_speed$velocity==1,c("FromNode","ToNode")]
uplinks <- as.data.frame(paste(downlinks$ToNode,downlinks$FromNode,sep="_"),stringsAsFactors = F)
colnames(uplinks) <- "Links"
uplinks$upVel <- -1
netw_speed <- merge(netw_speed,uplinks,by="Links",all.x=T)
netw_speed[netw_speed$upVel!=netw_speed$velocity & !is.na(netw_speed$upVel),]$velocity <- -1
netw_speed[is.na(netw_speed$upVel) & netw_speed$velocity==-1,]$velocity <- 1
## identify steep slopes
netw_speed[netw_speed$Diff==2 & !is.na(netw_speed$Diff) & netw_speed$velocity==1,]$velocity <- 2
netw_speed <- netw_speed[order(netw_speed$order),]
table(netw_speed$velocity2)
x11()
op <- par(mfrow=c(2,2),mar=c(0,0,2,0))
plot(Ship_Travel_Netw,col=1)
plot(Ship_Travel_Netw[netw_speed$velocity==0 & !is.na(netw_speed$velocity),],col=1,add=T,lwd=5)
mtext(side=3,text="No current")
plot(Ship_Travel_Netw,col=1)
plot(Ship_Travel_Netw[netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity),],col=3,add=T,lwd=5)
mtext(side=3,text="downstream")
dat <- subset(netw_speed,netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity))
# for (i in 1:length(which(netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity)))){
#   node1 <- dat$FromNode[i]
#   node2 <- dat$ToNode[i]
#   arrows(from_node$Long[from_node$nodeID==node1],from_node$Lat[from_node$nodeID==node1],from_node$Long[from_node$nodeID==node2],from_node$Lat[from_node$nodeID==node2],length=0.2)
#   # Sys.sleep(0.1)
# }
plot(Ship_Travel_Netw,col=1)
cols <- rainbow(100,start=4/6,end=0)
col_ind <- round((netw_speed$velocity2/max(netw_speed$velocity2)*99)+1)
col_ind[col_ind<0] <- 1
netw_speed$col_ind <- col_ind
plot(Ship_Travel_Netw,col=cols[col_ind],add=T,lwd=5)
mtext(side=3,text="downstream")
dat <- subset(netw_speed,netw_speed$velocity%in%c(1,2) & !is.na(netw_speed$velocity))
# plot(Ship_Travel_Netw,col=1)
# plot(Ship_Travel_Netw[netw_speed$velocity==-1 & !is.na(netw_speed$velocity),],col=5,add=T,lwd=2)
# mtext(side=3,text="upstream")
# dat <- subset(netw_speed,netw_speed$velocity==-1 & !is.na(netw_speed$velocity))
# for (i in 1:length(which(netw_speed$velocity==-1 & !is.na(netw_speed$velocity)))){
#   node1 <- dat$FromNode[i]
#   node2 <- dat$ToNode[i]
#   arrows(from_node$Long[from_node$nodeID==node1],from_node$Lat[from_node$nodeID==node1],from_node$Long[from_node$nodeID==node2],from_node$Lat[from_node$nodeID==node2],length=0.2)
#   # Sys.sleep(.1)
# }
plot(Ship_Travel_Netw,col=1)
plot(Ship_Travel_Netw[netw_speed$velocity==2 & !is.na(netw_speed$velocity),],col=2,add=T,lwd=5)
mtext(side=3,text="Strong currents")
# plot(Ship_Travel_Netw,col=1)
# plot(Ship_Travel_Netw[is.na(netw_speed$velocity),],col=2,add=T,lwd=2)
# mtext(side=3,text="NAs")
par(op)
col_inds
col_ind
cols[col_ind]
plot(1:666,cols[col_ind])
plot(1:666,col=cols[col_ind])
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
cols[col_ind]
table(cols[col_ind])
i
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
i
southends[4,]
plot(Ship_Travel_Netw)#,col=1,xlim=c(14,15),ylim=c(52,54)
plot(Ship_Travel_Netw[ww_data$FromNode%in%endpoints,],add=T,col=2)
points(from_node[from_node$nodeID%in%endpoints,c("Long","Lat")])
plot(Ship_Travel_Netw[netw_speed$Diff==0,],col=4,add=T)
plot(Ship_Travel_Netw[Ship_Travel_Netw@data$ID=="W426",],col=4,add=T,lwd=5)#W189,W265,193
# plot(Ship_Travel_Netw[netw_speed$Diff==1,],col=3,add=T)
plot(Ship_Travel_Netw[netw_speed$Diff==2,],col=2,add=T)
points(from_node[from_node$nodeID%in%325504000,c("Long","Lat")],pch=16,col=3,cex=2)
# plot(Ship_Travel_Netw[Ship_Travel_Netw@data$FromNode%in%c(346109000,346101000),],col=1:6,add=F,lwd=5)
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
table(netw_speed$velocity2)
table(netw_speed$col_ind)
col_ind
cols[col_ind]
table(cols[col_ind])
table(netw_speed$col_ind)
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
table(netw_speed$col_ind)
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
cols[col_ind]
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
cols
cols[col_ind]
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
cols[col_ind]
plot(1:666,col=cols[col_ind])
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
table(col_ind)
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Model/CASPIAN/R/AssignCargoCol.r')
water_netw
water_netw
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
netw_speed
getwd()
write.table(netw_speed[,c("FromNode","ToNode","velocity")],"WaterCurrentVelocity.csv",row.names=NULL)
write.table(netw_speed[,c("FromNode","ToNode","velocity")],"WaterCurrentVelocity.csv",rownames=NULL)
write.table(netw_speed[,c("FromNode","ToNode","velocity")],"WaterCurrentVelocity.csv",row.names=F)
source('~/Bioinvasion/EBAspread/Data/Waterways/AssignWaterVelocity.r')
velo <- read.table("WaterCurrentVelocity.csv")
setwd("/home/hanno/Bioinvasion/EBAspread/Model")
velo <- read.table("../Data/WaterCurrentVelocity.csv")
source('~/Bioinvasion/EBAspread/Model/CASPIAN/R/AssignCargoCol.r')
getwd()
velo <- read.table("../../Data/WaterCurrentVelocity.csv")
velo <- read.table("../Data/Waterways/WaterCurrentVelocity.csv")
velo
head(velo)
velo <- read.table("../Data/Waterways/WaterCurrentVelocity.csv",stringsAsFactors = F,header=T)
head(velo)
water_netw
head(velo)
water_netw
source('~/Bioinvasion/EBAspread/Model/CASPIAN/R/AssignCargoCol.r')
str(velo)
str(water_netw)
velo <- fread("../Data/Waterways/WaterCurrentVelocity.csv",stringsAsFactors = F,header=T)
str(velo)
velo$FromNode <- as.character(velo$FromNode)
velo$ToNode <- as.character(velo$ToNode)
water_velo <- merge(water_netw,velo,by=c("FromNode","ToNode"),all=T)
water_velo
water_velo <- water_velo[order(water_velo$Order),]
water_velo
identical(Ship_Travel_Netw@data[,1:6],water_velo[,1:6])
Ship_Travel_Netw@data[,1:6]
class(Ship_Travel_Netw@data[,1:6])
water_velo[,1:6]
water_velo <- as.data.frame(water_velo[order(water_velo$Order),],stringsAsFactors=F)
identical(Ship_Travel_Netw@data[,1:6],water_velo[,1:6])
Ship_Travel_Netw@data[,1:6]
water_velo[,1:6]
water_velo[1:5,1:6]
Ship_Travel_Netw@data[1:5,1:6]
identical(Ship_Travel_Netw@data[1:5,1:6],water_velo[1:5,1:6])
class(water_velo)
str(water_velo)
str(Ship_Travel_Netw@data)
identical(Ship_Travel_Netw@data$FromNode,water_velo$FromNode)
identical(Ship_Travel_Netw@data$ToNode,water_velo$ToNode)
identical(Ship_Travel_Netw@data$Motorized,water_velo$Motorized)
identical(Ship_Travel_Netw@data$Length,water_velo$Length)
identical(Ship_Travel_Netw@data$ID,water_velo$ID)
Ship_Travel_Netw@data <- water_velo
load(file="/home/hanno/GitHub/AlienSpeciesSpread/CASPIAN/data/Ship_Travel_Netw.rda")
source('~/Bioinvasion/EBAspread/Model/CASPIAN/R/AssignCargoCol.r')
library(data.table)
library(CASPIAN)
source('~/Bioinvasion/EBAspread/Model/CASPIAN/R/AssignCargoCol.r')
library(devtools)
source('~/Bioinvasion/EBAspread/Model/CASPIAN/R/AssignCargoCol.r')
source('~/Bioinvasion/EBAspread/Model/CASPIAN/R/AssignCargoCol.r')
source('~/Bioinvasion/EBAspread/Model/CASPIAN/R/AssignCargoCol.r')
velo <- read.table("/home/hanno/Bioinvasion/EBAspread/Data/Waterways/WaterCurrentVelocity.csv",stringsAsFactors = F,header=T)
port_data <- fread("../Data/Waterways/PortNodeData.csv",sep=";",stringsAsFactors = F)
port_data <- fread("/home/hanno/Bioinvasion/EBAspread/Data/Waterways/PortNodeData.csv",sep=";",stringsAsFactors = F)
source('~/Bioinvasion/EBAspread/Model/CASPIAN/R/AssignCargoCol.r')
length(Ship_Travel_Netw)
order(water_velo$Order)
use_data(Ship_Travel_Netw,overwrite=T)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R')
library(CASPIAN)
library(CASPIAN)
source('~/GitHub/AlienSpeciesSpread/Scripts/InitializationScript.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
konto1 <- read.table("20190126-1027916143-umsatz.CSV",header=F,stringsAsFactors = F)
konto1 <- read.table("20190126-1027916143-umsatz.CSV",header=T,stringsAsFactors = F,sep=";")
str(konto1)
gsub(",","\\.",konto1$Betrag)
konto1$Betrag <- as.numeric(gsub(",","\\.",konto1$Betrag))
konto1$Betrag
head(konto1)
buchung <- aggregate(konto1$Betrag,by=list("Buchungstext"),sum)
buchung <- aggregate(konto1$Betrag,by=list(konto1$Buchungstext),sum)
buchung
sum(buchung$x)
konto2 <- read.table("20190126-1027916151-umsatz.CSV",header=T,stringsAsFactors = F,sep=";")
konto2$Betrag <- as.numeric(gsub(",","\\.",konto2$Betrag))
buchung2 <- aggregate(konto2$Betrag,by=list(konto2$Buchungstext),sum)
buchung2
kk <- read.table("umsatz-5232________9330-20190126.CSV",header=T,stringsAsFactors = F,sep=";")
kk <- read.table("umsatz-52329330-20190126.CSV",header=T,stringsAsFactors = F,sep=";")
buchung2
library(CASPIAN)
library(CASPIAN)
gc()
rm(list=ls())
gc()
?rm
ls()
