road_netw[is.na(newstate),newstate:=0]
## error check for declining stateFromNode
if (any(road_netw[newstate>0,newstate<stateFromNode])) {
assign(x = "road_netw",value = road_netw,envir = .GlobalEnv)
stop ("Problem in spread probability calculations: Decline in stateFromNode")
}
road_netw[,newstate:=NULL] # remove column to avoid columns with the same names
newstate <- unique(road_netw[,c("ToNode","stateToNode")],by="ToNode") # extract new state of ToNodes to update FromNodes states
setnames(newstate,c("FromNode","newstate")) # prepare file for merge (set names and key)
setkey(newstate,FromNode)
setkey(road_netw,FromNode)
road_netw <- merge(road_netw,newstate,by="FromNode",all.x=T)
road_netw[is.na(newstate),newstate:=0]
## error check for declining stateFromNode
if (any(road_netw[newstate>0,newstate<stateFromNode])) {
assign(x = "road_netw",value = road_netw,envir = .GlobalEnv)
stop ("Problem in spread probability calculations: Decline in stateFromNode")
}
s
s
newstate <-road_netw[,c("ToNode","stateToNode")] # extract new state of ToNodes to update FromNodes states
newstate<-as.data.table(aggregate(stateToNode ~ ToNode, newstate, pUnion))
newstate <-road_netw[ind,c("ToNode","stateToNode")] # extract new state of ToNodes to update FromNodes states
newstate<-as.data.table(aggregate(stateToNode ~ ToNode, newstate, pUnion))
setnames(newstate,c("FromNode","newstate")) # prepare file for merge (set names and key)
setkey(newstate,FromNode)
setkey(road_netw,FromNode)
road_netw <- merge(road_netw,newstate,by="FromNode",all.x=T)
road_netw[is.na(newstate),newstate:=0]
road_netw[,newstate.x:=NULL]
road_netw[,newstate.y:=NULL]
newstate <-road_netw[ind,c("ToNode","stateToNode")] # extract new state of ToNodes to update FromNodes states
newstate<-as.data.table(aggregate(stateToNode ~ ToNode, newstate, pUnion))
setnames(newstate,c("FromNode","newstate")) # prepare file for merge (set names and key)
setkey(newstate,FromNode)
setkey(road_netw,FromNode)
road_netw <- merge(road_netw,newstate,by="FromNode",all.x=T)
road_netw[is.na(newstate),newstate:=0]
## error check for declining stateFromNode
if (any(road_netw[newstate>0,newstate<stateFromNode])) {
assign(x = "road_netw",value = road_netw,envir = .GlobalEnv)
stop ("Problem in spread probability calculations: Decline in stateFromNode")
}
output<-runCASPIAN("~/../Desktop/configFile.R")
road_netw[stateFromNode>newstate,]
road_netw[ToNode=="999242",]
road_netw[FromNode=="999242",]
ind <- which(road_netw$stateFromNode>0 & road_netw$stateToNode<1) # select links with non-empty start node and non-filled end node
newstate <-road_netw[ind,c("ToNode","stateToNode")] # extract new state of ToNodes to update FromNodes states
newstate<-as.data.table(aggregate(stateToNode ~ ToNode, newstate, pUnion))
setnames(newstate,c("FromNode","newstate")) # prepare file for merge (set names and key)
setkey(newstate,FromNode)
setkey(road_netw,FromNode)
newstate
newstate[FromNode=="999242"]
newstate[FromNode=="999242",]
newstate <-road_netw[,c("ToNode","stateToNode")] # extract new state of ToNodes to update FromNodes states
newstate<-as.data.table(aggregate(stateToNode ~ ToNode, newstate, pUnion))
road_netw[,newstate:=NULL] # remove column to avoid columns with the same names
setnames(newstate,c("FromNode","newstate")) # prepare file for merge (set names and key)
setkey(newstate,FromNode)
setkey(road_netw,FromNode)
road_netw <- merge(road_netw,newstate,by="FromNode",all.x=T)
road_netw[is.na(newstate),newstate:=0]
## error check for declining stateFromNode
if (any(road_netw[newstate>0,newstate<stateFromNode])) {
assign(x = "road_netw",value = road_netw,envir = .GlobalEnv)
stop ("Problem in spread probability calculations: Decline in stateFromNode")
}
output<-runCASPIAN("~/../Desktop/configFile.R")
output<-runCASPIAN("~/../Desktop/configFile.R")
output<-runCASPIAN("~/../Desktop/configFile.R")
road_netw
road_netw[stateFromNode>newstate,]
road_netw[FromNode=="99910002" | ToNode=="99910002",]
road_netw[FromNode=="99910026" | ToNode=="99910026",]
road_netw[FromNode=="99910026" | ToNode=="99910026",stateFromNode-newstate]
road_netw[FromNode=="99910026" | ToNode=="99910026",stateToNode-Pi_container]
road_netw[FromNode=="99910026",newstate] - road_netw[ToNode=="99910026",stateToNode]
?format
?sprintf
option(digits)
options(digits)
options(digits)
option(digits=7)
options(digits=7)
output<-runCASPIAN("~/../Desktop/configFile.R")
road_netw[newstate>0,newstate]-road_netw[newstate>0,stateFromNode]
road_netw[newstate>0,stateFromNode]-road_netw[newstate>0,newstate]
summary(road_netw[newstate>0 & newstate<stateFromNode,stateFromNode]-road_netw[newstate>0 & newstate<stateFromNode,newstate])
any((road_netw[newstate>0 & newstate<stateFromNode,stateFromNode]-road_netw[newstate>0 & newstate<stateFromNode,newstate])>10^-15)
output<-runCASPIAN("~/../Desktop/configFile.R")
source('C:/Users/mbagnara/Desktop/configFile.R', encoding = 'UTF-8', echo=TRUE)
rm(list=ls())
output<-runCASPIAN("~/../Desktop/configFile.R")
output<-runCASPIAN("~/../Desktop/configFile.R")
library(CASPIAN)
output<-runCASPIAN("~/../Desktop/configFile.R")
output[[1]][[3]]$Pinv
Water_netw_data@data<-output[[1]][[3]]
plot(Water_netw_data)
library(CASPIAN)
output<-runCASPIAN("~/../Desktop/configFile.R")
plotResults(list_results=modelResults[["AcquaticResults"]][[3]],shapeObj=Water_netw_data,save_plot=save_plot,save_dir=dir.name)
plotResults(list_results=output[["AcquaticResults"]][[3]],shapeObj=Water_netw_data,save_plot=save_plot,save_dir=dir.name)
plotResults(list_results=output[["AcquaticResults"]][3],shapeObj=Water_netw_data,save_plot=save_plot,save_dir=dir.name)
init_coords
output<-runCASPIAN("~/../Desktop/configFile.R")
plot(Ship_Travel_Netw)
graphics.off()
plot(Ship_Travel_Netw)
Ship_Travel_Netw@data<-output[[1]][3]
Ship_Travel_Netw@data<-output[[1]][[3]]
plot(Ship_Travel_Netw,col="red",add=TRUE)
plot(border_dataset,add=T)
output[3]
output[[1]][3]
output[[]][3]
output[[2]][3]
summary(output[[2]][3])
waterOutput<-output[[2]][3]
summary(waterOutput)
waterOutput<-output[[1]][3]
summary(output[[1]][3])
waterOutput<-output[[2]][3]
summary(waterOutput)
summary(as.data.frame(waterOutput))
summary(waterOutput$Pinv)
waterOutput<-output[[2]][3]
waterOutput
waterOutput<-output[[1]][3]
waterOutput
waterOutput<-output[[2]][3]
waterOutput
# build parameter matrix
parameters<-matrix(c(par_att0_Roads,par_att0_Railways,par_att1,par_att2,par_att3,
par_air0_Roads,par_air0_Railways,par_air1,par_air2,
par_nat1,par_nat2,par_est,par_cont,par_pall,
par_mobile_proportion,par_stat_speed,par_mob_speed,
par_a,par_c1,par_g,par_c2,par_b,par_c3
),nrow=1,byrow=T)
colnames(parameters)<-c("S_att0", "R_att0","att1","att2","att3","S_air0","R_air0", "air1","air2","nat1","nat2","est0","cont1","pall1",
"mob_prop","stat_speed","mob_speed","a","c1","g","c2","b","c3")
#build land cover species preference matrix
species_preferences<- data.table(LC_cat_ID= 1:5,Species_preferences=c(Urban_areas,Arable_land,Pastures,Forests,Wetlands))
#running model:
modelResults<-list()
AcquaticModelResults<-WaterSpreadModel(parameters,
Water_netw_data=Water_netw_data,
traffic_type=traffic_type,
initialize = initialize, save_init = save_init, file_init = file_init,
init_coords=init_coords, num_iter=num_iter,max_dist = max_dist,
incl_biofouling=incl_biofouling,incl_natural_water=incl_natural_water,
makeplot = makeplot,save_plot=save_plot,iter_save = iter_save
)
init_data$init_segm
water_init_data<-InitializeWaterSpread(Water_netw_data=Water_netw_data,
init_coords=init_coords,max_dist=max_dist,
#netw_type=netw_type,
save_init=save_init, save_dir=dir.name,file_init=file_init,
#species_preferences=species_preferences,
traffic_type=traffic_type
)
water_init_data$init_segm
plot(water_init_data$water_shp)
plot(water_init_data$water_shp[ID%in%water_init_data$init_segm,],add=T,col="red")
plot(water_init_data$water_shp[water_init_data$init_segm%in%ID,],add=T,col="red")
plot(water_init_data$water_shp[water_init_data$water_shp@data$ID%in%water_init_data$init_segm,],add=T,col="red")
plot(border_dataset,add=T)
plot(water_init_data$water_shp[water_init_data$water_shp@data$ID%in%water_init_data$init_segm,],add=T,col="red")
plot(water_init_data$water_shp,col="blue")
plot(border_dataset,add=T)
plot(water_init_data$water_shp,col="blue",add=TRUE)
output<-runCASPIAN("~/../Desktop/configFile.R")
rm(list=ls())
output<-runCASPIAN("~/../Desktop/configFile.R")
rm(list=ls())
output<-runCASPIAN("~/../Desktop/configFile.R")
parameters<-matrix(c(par_att0_Roads,par_att0_Railways,par_att1,par_att2,par_att3,
par_air0_Roads,par_air0_Railways,par_air1,par_air2,
par_nat1,par_nat2,par_est,par_cont,par_pall,
par_mobile_proportion,par_stat_speed,par_mob_speed,
par_a,par_c1,par_g,par_c2,par_b,par_c3
),nrow=1,byrow=T)
colnames(parameters)<-c("S_att0", "R_att0","att1","att2","att3","S_air0","R_air0", "air1","air2","nat1","nat2","est0","cont1","pall1",
"mob_prop","stat_speed","mob_speed","a","c1","g","c2","b","c3")
#build land cover species preference matrix
species_preferences<- data.table(LC_cat_ID= 1:5,Species_preferences=c(Urban_areas,Arable_land,Pastures,Forests,Wetlands))
#running model:
dir.name<-file.path(getwd(),paste0("CASPIAN_",format(Sys.time(), "%d-%b-%Y %H-%M-%S")))
dir.create(dir.name)
modelResults<-list()
if(runAcquaticModel==TRUE){
cat("\n Running Acquatic Model \n")
AcquaticModelResults<-WaterSpreadModel(parameters,
Water_netw_data=Water_netw_data,
traffic_type=traffic_type,
initialize = initialize, save_init = save_init, file_init = file_init,
init_coords=init_coords, num_iter=num_iter,max_dist = max_dist,
incl_biofouling=incl_biofouling,incl_natural_water=incl_natural_water,
makeplot = makeplot,save_plot=save_plot,iter_save = iter_save
)
modelResults[["AcquaticResults"]]<-AcquaticModelResults
}
dir.name
if (makeplot) {
cat("\n Creating maps \n")
if (runTerrestrialModel){
plotResults(list_results=modelResults[["TerrestrialResults"]],shapeObj=Terrestrial_netw_data,save_plot=save_plot,save_dir=dir.name)
}
if (runAcquaticModel){
plotResults(list_results=modelResults[["AcquaticResults"]],shapeObj=Water_netw_data,save_plot=save_plot,save_dir=dir.name)
}
}
rm(list=ls())
output<-runCASPIAN("~/../Desktop/configFile.R")
library(CASPIAN)
rm(list=ls())
output<-runCASPIAN("~/../Desktop/configFile.R")
output<-output[[1]]
plotResults(output,Ship_Travel_Netw,save_plot = FALSE)
nrow(output[[1]])
nrow(output[[2]])
nrow(output[[3]])
summary(output[[3]])
summary(output[[3]]$Pinv)
hist(output[[3]]$Pinv)
hist(output[[3]]$Pinv)
hist(output[[3]]$Pinv)
list_results<-output
length(list_results)
num_col<-5
#create palette
norm<-seq(0,1,length.out=c(10^num_col+1))
colfunc <- colorRampPalette(c("green3","gold","darkorange","red3","darkred"))
color<-colfunc(10^num_col+1)
pal<-data.table(norm=norm,color=color)
pal$color<-as.character(pal$color)
i<-3
shapeObj@data <- list_results[[i]]
shapeObj<-Water_netw_data
shapeObj@data <- list_results[[i]]
nrow(shapeObj@data)
shapeObj@data$norm <- round(shapeObj@data$Pinv,num_col)
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
summary(shapeObj@data)
#isolating segments where species has been introduced, not introduced, or has invaded
Inv<-shapeObj[shapeObj@data$norm>0,]
Not_inv<-shapeObj[shapeObj@data$norm==0,]
nrow(Inv)
nrow(Not_inv)
x11(width=11,height = 8)
layout(matrix(1:3,nrow=1),widths=c(0.6,0.15,0.25))
#actual map plotting
op <- par(mar=c(0.1,1,0.1,0.5))
plot(border_dataset,axes=F, border="black",
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]))
plot(Not_inv,add=T,col="darkgray")
plot(Inv,add=T,col=Inv@data$color)
x11(width=11,height = 8)
layout(matrix(1:3,nrow=1),widths=c(0.6,0.15,0.25))
#actual map plotting
op <- par(mar=c(0.1,1,0.1,0.5))
plot(border_dataset,axes=F, border="black",
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]))
plot(Not_inv,add=T,col="darkgray")
plot(Inv,add=T,col="blue")
plot(Inv,add=T,col=Inv@data$color)
unique(Inv$color)
num_col<-5
#create palette
norm<-seq(0,1,length.out=c(10^num_col+1))
colfunc <- colorRampPalette(c("green3","gold","darkorange","red3","darkred"))
color<-colfunc(10^num_col+1)
pal<-data.table(norm=norm,color=color)
pal$color<-as.character(pal$color)
pal$color
unique(pal$color)
shapeObj@data <- list_results[[i]]
shapeObj@data$norm <- round(shapeObj@data$Pinv,num_col)
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
summary(shapeObj@data$norm)
unique(shapeObj@data$color)
plot(1:7,1:7,pch=16,col=unique(shapeObj@data$color))
plot(1:587,1:587,pch=16,col=unique(shapeObj@data$color))
shapeObj@data[is.na(shapeObj@data$color),]
summary(shapeObj@data[is.na(shapeObj@data$color),])
pal$norm
pal
str(pa)
str(pal)
shapeObj@data(pal)
str(shapeObj@data)
pal[norm==.7,]
pal[norm==0.7,]
pal[norm=="0.7",]
num_col<-5
#create palette
norm<-as.character(seq(0,1,length.out=c(10^num_col+1)))
colfunc <- colorRampPalette(c("green3","gold","darkorange","red3","darkred"))
color<-colfunc(10^num_col+1)
pal<-data.table(norm=norm,color=color)
pal$color<-as.character(pal$color)
shapeObj@data <- list_results[[i]]
shapeObj@data$norm <- as.character(round(shapeObj@data$Pinv,num_col))
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
summary(shapeObj@data[is.na(shapeObj@data$color),])
unique(shapeObj@data$color)
#isolating segments where species has been introduced, not introduced, or has invaded
shapeObj@data$norm<-as.numeric(shapeObj@data$norm)
Inv<-shapeObj[shapeObj@data$norm>0,]
Not_inv<-shapeObj[shapeObj@data$norm==0,]
x11(width=11,height = 8)
layout(matrix(1:3,nrow=1),widths=c(0.6,0.15,0.25))
#actual map plotting
op <- par(mar=c(0.1,1,0.1,0.5))
plot(border_dataset,axes=F, border="black",
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]))
plot(Not_inv,add=T,col="darkgray")
plot(Inv,add=T,col=Inv@data$color)
# for (j in init_nodes) points(subset(node_shp_sub,Knoten_Num%in%j),pch=1,cex=1,col="darkgrey",lwd=2)
# mtext(t,side=3,line=-2)
legend("topleft",c(paste0("Iter. #",names(list_results)[i])),box.col = "white",bg = "white")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plotResults(list_results=TerrestrialModelResults,shapeObj=Terrestrial_netw_data,save_plot=save_plot,save_dir=dir.name_T)
TerrestrialModelResults<-output[[1]]
plotResults(list_results=TerrestrialModelResults,shapeObj=Terrestrial_netw_data,save_plot=save_plot,save_dir=dir.name_T)
plotResults(list_results=TerrestrialModelResults,shapeObj=Terrestrial_netw_data,save_plot=FALSE,save_dir=dir.name_T)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
incl_attachment<-TRUE # if attachment to vehicles should be considered.
source('~/GitHub/AlienSpeciesSpread/CASPIAN/inst/extdata/configFile.R', encoding = 'UTF-8')
Qp_term<-1-exp(-g*(Qp^c2))
par_g <-1.03 * 10^-10
par_c2 <-3.63
library(CASPIAN)
output<-runCASPIAN("~/../Desktop/configFile.R")
output<-runCASPIAN("~/../Desktop/configFile.R")
source('~/.active-rstudio-document')
Paint_time
library(CASPIAN)
source('~/.active-rstudio-document')
library(CASPIAN)
source('~/.active-rstudio-document')
f_biofouling(b = b,c3=c3,d=Ship_Travel_Netw@data$Length)
f_biofouling(b = b,c3=c3,VTp = =Ship_Travel_Netw@data$Length)
plot(f_biofouling(b = b,c3=c3,VTp = sort(Ship_Travel_Netw@data$Length)))
f_biofouling(b = b,c3=c3,VTp = =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)
f_biofouling(b = b,c3=c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)
source('C:/Users/mbagnara/Desktop/configFile.R', encoding = 'UTF-8')
f_biofouling(b = b,c3=c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)
f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)
plot(f_biofouling(b = par_b,c3=par_c3,VTp =sort(Ship_Travel_Netw@data$Length),Dp=NA,Qp=NA))
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA),Ship_Travel_Netw@data$Length)
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)Ship_Travel_Netw@data$Length)
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-3.15 * 10^-5
par_c3 <-2.39
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-3.15 * 10^-3
par_c3 <-2.39
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.3
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
summary(Ship_Travel_Netw@data$Length)
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length,type="l")
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.001
7
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.000000001
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-10
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.9
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2.39
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.05
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.001
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.1
par_b <-2
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.3
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.00001
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.001
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.99
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-2
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.00001
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.0000001
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-.000000001
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-3.15 * 10^-7
par_c3 <-2.39
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-10
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-.1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-1.5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-10
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-3.15 * 10^-5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_b <-3.15 * 10^-4
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-3
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2.3
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2.1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2.5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2.6
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2.7
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2.8
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
hist(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA))
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
hist(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA))
par_b
par_c3 <-3
par_c3 <-3.5
hist(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA))
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-1.5
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2.1
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2.2
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
par_c3 <-2.4
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=1/30,Qp=2,a = par_a,c1 = par_c1,g = par_g,c2 = par_c2)~Ship_Travel_Netw@data$Length)
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=1/30,Qp=5,a = par_a,c1 = par_c1,g = par_g,c2 = par_c2)~Ship_Travel_Netw@data$Length)
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=NA,Qp=NA)~Ship_Travel_Netw@data$Length)
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=1/30,Qp=5,a = par_a,c1 = par_c1,g = par_g,c2 = par_c2)~Ship_Travel_Netw@data$Length)
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=1/30,Qp=.1,a = par_a,c1 = par_c1,g = par_g,c2 = par_c2)~Ship_Travel_Netw@data$Length)
plot(f_biofouling(b = par_b,c3=par_c3,VTp =Ship_Travel_Netw@data$Length,Dp=1/30,Qp=.1,a = par_a,c1 = par_c1,g = par_g,c2 = par_c2)~Ship_Travel_Netw@data$Length)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(CASPIAN)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
getwd()
library(CASPIAN)
getwd()
